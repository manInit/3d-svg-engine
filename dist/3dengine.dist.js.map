{"version":3,"file":"3dengine.dist.js","mappings":"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","sources":["webpack:///./src/ts/utils/angle.ts","webpack:///./src/ts/core/TranformMatrix.ts","webpack:///./src/ts/core/RenderPipe.ts","webpack:///./src/ts/utils/svgElements.ts","webpack:///./src/ts/core/Camera.ts","webpack:///./src/ts/core/World.ts","webpack:///./src/ts/ObjectsWorld/BackgroundElem.ts","webpack:///./src/ts/core/ObjectWorld.ts","webpack:///./src/ts/core/Polygon.ts","webpack:///./src/ts/ObjectsWorld/Cube.ts","webpack:///./src/ts/ObjectsWorld/Pyramid.ts","webpack:///./src/ts/index.ts"],"sourcesContent":["const degToRad = (deg: number): number => deg * Math.PI / 180\r\nconst radToDeg = (rad: number): number => rad * 180 / Math.PI\r\n\r\nexport { \r\n  degToRad,\r\n  radToDeg\r\n}","import Point from './Point'\r\nimport { degToRad } from '../utils/angle'\r\n\r\nexport default class TransformMatrix {\r\n  public static translate(point: Point, x: number, y: number, z: number): Point {\r\n    return {\r\n      x: point.x + x,\r\n      y: point.y + y,\r\n      z: point.z + z\r\n    }\r\n  }\r\n\r\n  public static scale(point: Point, sx: number, sy: number, sz: number): Point {\r\n    return {\r\n      x: point.x * sx,\r\n      y: point.y * sy,\r\n      z: point.z * sz\r\n    }\r\n  }\r\n\r\n  public static perspectiveProjection(point: Point, z0: number): Point {\r\n    return {\r\n      x: point.x * z0 / point.z,\r\n      y: point.y * z0 / point.z,\r\n      z: 0\r\n    }\r\n  }\r\n\r\n  public static rotateX(point: Point, a: number): Point {\r\n    const rad = degToRad(a)\r\n    return {\r\n      x: point.x,\r\n      y: point.y * Math.cos(rad) + point.z * Math.sin(rad),\r\n      z: -point.y * Math.sin(rad) + point.z * Math.cos(rad)\r\n    }\r\n  }\r\n\r\n  public static rotateY(point: Point, a: number): Point {\r\n    const rad = degToRad(a)\r\n    return {\r\n      x: point.x * Math.cos(rad) - point.z * Math.sin(rad),\r\n      y: point.y,\r\n      z: point.x * Math.sin(rad) + point.z * Math.cos(rad)\r\n    }\r\n  }\r\n\r\n  public static rotateZ(point: Point, a: number): Point {\r\n    const rad = degToRad(a)\r\n    return {\r\n      x: point.x * Math.cos(rad) + point.y * Math.sin(rad),\r\n      y: -point.x * Math.sin(rad) + point.y * Math.cos(rad),\r\n      z: point.z\r\n    }\r\n  }\r\n}","import Camera from './Camera'\r\nimport Point from './Point'\r\nimport TransformMatrix from './TranformMatrix'\r\n\r\nexport default class RenderPipe {\r\n  private width: number \r\n  private height: number\r\n  private z0: number\r\n  private zFar: number\r\n  private camera: Camera\r\n\r\n  constructor(width: number, height: number, z0: number, zFar: number, camera: Camera) {\r\n    this.width = width\r\n    this.height = height\r\n\r\n    this.z0 = z0\r\n    this.zFar = zFar\r\n    this.camera = camera\r\n  }\r\n\r\n  public convertPoints(points: Point[]): { points: Point[], averageDistance: number } {\r\n    const resPoints: Point[] = []\r\n\r\n    let sumDistance = 0\r\n    for (let point of points) {\r\n      point = this.cameraTranslate(point)\r\n      point = this.cameraRotate(point)\r\n\r\n      //передняя и дальняя плоскость отсечения\r\n      if (point.z < 0) continue\r\n      if (point.z > this.zFar) continue\r\n\r\n      sumDistance += Math.sqrt(point.x ** 2 + point.y ** 2 + point.z ** 2)\r\n\r\n      point = TransformMatrix.perspectiveProjection(point, this.z0)\r\n      point = TransformMatrix.scale(point, 1, -1, 1)\r\n      point = TransformMatrix.translate(point, this.width / 2, this.height / 2, 0)\r\n\r\n      resPoints.push(point)\r\n    }\r\n    const averageDistance = sumDistance / resPoints.length\r\n\r\n    return { points: resPoints, averageDistance }\r\n  }\r\n\r\n  private cameraTranslate(point: Point): Point {\r\n    return TransformMatrix.translate(point, -this.camera.position.x, -this.camera.position.y, -this.camera.position.z)\r\n  }\r\n\r\n  private cameraRotate(point: Point): Point {\r\n    point = TransformMatrix.rotateX(point, this.camera.rotation.ax)\r\n    point = TransformMatrix.rotateY(point, this.camera.rotation.ay)\r\n    return TransformMatrix.rotateX(point, this.camera.rotation.az)\r\n  }\r\n}","const createPolygonElem = (): SVGPolygonElement => {\r\n  const svgPolygon = document.createElementNS('http://www.w3.org/2000/svg', 'polygon')\r\n  svgPolygon.setAttribute('stroke', 'red')\r\n  svgPolygon.setAttribute('stroke-width', '2')\r\n  return svgPolygon\r\n}\r\n\r\nconst createCircleElem = (cx: number, cy: number, r: number): SVGCircleElement => {\r\n  const svgCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle')\r\n  svgCircle.setAttribute('cx', cx.toString())\r\n  svgCircle.setAttribute('cy', cy.toString())\r\n  svgCircle.setAttribute('r', r.toString())\r\n\r\n  return svgCircle\r\n}\r\n\r\nconst createSVGElem = (): SVGSVGElement => {\r\n  const elem = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\r\n  if (!(elem instanceof SVGSVGElement))\r\n    throw new Error('Expected svg root elem')\r\n\r\n  return elem\r\n}\r\n\r\nconst createSVGGElem = (): SVGGElement => {\r\n  const elem = document.createElementNS('http://www.w3.org/2000/svg', 'g')\r\n  if (!(elem instanceof SVGGElement))\r\n    throw new Error('Expected svg g elem')\r\n\r\n  return elem\r\n}\r\n\r\nconst createTextureElement = (urlTexture: string, id: string): SVGDefsElement => {\r\n  const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs')\r\n\r\n  const pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern')\r\n  pattern.id = id\r\n  pattern.setAttribute('patternContentUnits', 'objectBoundingBox')\r\n  pattern.setAttribute('height', '100%')\r\n  pattern.setAttribute('width', '100%')\r\n  pattern.setAttribute('x', '0')\r\n  pattern.setAttribute('y', '0')\r\n  pattern.setAttribute('preserveAspectRatio', 'none')\r\n\r\n  const image = document.createElementNS('http://www.w3.org/2000/svg', 'image')\r\n  image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', urlTexture)\r\n  image.setAttribute('width', '1')\r\n  image.setAttribute('height', '1')\r\n  image.setAttribute('preserveAspectRatio', 'none')\r\n  \r\n  pattern.append(image)\r\n  defs.append(pattern)\r\n  \r\n  return defs\r\n}\r\n\r\nexport {\r\n  createPolygonElem,\r\n  createCircleElem,\r\n  createSVGElem,\r\n  createTextureElement,\r\n  createSVGGElem\r\n}","import { degToRad } from '../utils/angle'\r\n\r\nexport default class Camera {\r\n  public rotation = { ax: 0, ay: 0, az: 0 }\r\n  public position = { x: 0, y: 0, z:0 }\r\n  \r\n  private rotationSpeed = { ax: 0, ay: 0, az: 0 }\r\n  private speedComponents = { x: 0, y: 0, z: 0 }\r\n\r\n  private root: HTMLElement\r\n  private keys = {\r\n    w: false,\r\n    s: false,\r\n    d: false,\r\n    a: false,\r\n    shift: false,\r\n    space: false\r\n  }\r\n\r\n  private angleSpeed = 3\r\n  private speed = 2\r\n  private azMax = 70\r\n\r\n  constructor(root: HTMLElement) { \r\n    this.root = root\r\n\r\n    this.setControls()\r\n  }\r\n\r\n  public update() {\r\n    this.updateSpeed()\r\n\r\n    this.position.x += this.speedComponents.x\r\n    this.position.y += this.speedComponents.y\r\n    this.position.z += this.speedComponents.z\r\n\r\n    this.rotation.ax += this.rotationSpeed.ax\r\n    this.rotation.ay += this.rotationSpeed.ay\r\n\r\n    this.changeZAngle(this.rotationSpeed.az)\r\n    this.rotation.ax %= 360\r\n    this.rotation.ay %= 360\r\n    this.rotation.az %= 360\r\n  }\r\n\r\n  private changeZAngle(daz: number) {\r\n    if (Math.abs(this.rotation.az) < this.azMax) {\r\n      this.rotation.az += daz\r\n    } else if (this.rotation.az > 0 && daz < 0 || this.rotation.az < 0 && daz > 0) {\r\n      this.rotation.az += daz\r\n    }\r\n  }\r\n\r\n  private updateSpeed() {\r\n    const vec = { x: 0, y: 0, z: 0 }\r\n\r\n    //направляющие косинусы\r\n    const b = Math.cos(degToRad(this.rotation.ay))\r\n    const c = Math.sin(degToRad(this.rotation.az))\r\n    //из двух нужно определить третий ??? что-то все равно не так\r\n    const a = Math.sin(degToRad(this.rotation.ay))\r\n\r\n    if (this.keys.w) {\r\n      vec.x += this.speed * a\r\n      vec.z += this.speed * b\r\n      vec.y -= this.speed * c\r\n    } \r\n    if (this.keys.s) {\r\n      vec.x -= this.speed * a\r\n      vec.z -= this.speed * b\r\n      vec.y += this.speed * c\r\n    }\r\n    if (this.keys.a) {\r\n      vec.x -= this.speed * b\r\n      vec.z += this.speed * a\r\n    }\r\n    if (this.keys.d) {\r\n      vec.x += this.speed * b\r\n      vec.z -= this.speed * a\r\n    }\r\n\r\n    if (this.keys.shift) vec.y -= this.speed\r\n    if (this.keys.space) vec.y += this.speed\r\n    \r\n    this.speedComponents = vec\r\n  }\r\n\r\n  private setControls() {\r\n    const mousemoveHandler = (e: MouseEvent) => {\r\n      this.rotation.ay += e.movementX / 10\r\n      this.changeZAngle(e.movementY / 10)\r\n    }\r\n\r\n    const keyUpListener = (e: KeyboardEvent) => {\r\n      if (this.keys.w && e.code === 'KeyW') this.keys.w = false\r\n      if (this.keys.s && e.code === 'KeyS') this.keys.s = false\r\n      if (this.keys.a && e.code === 'KeyA') this.keys.a = false\r\n      if (this.keys.d && e.code === 'KeyD') this.keys.d = false\r\n      if (this.keys.shift && e.code === 'ShiftLeft') this.keys.shift = false\r\n      if (this.keys.space && e.code === 'Space') this.keys.space = false\r\n      \r\n      if (e.key === 'ArrowRight') this.rotationSpeed.ay = 0\r\n      if (e.key === 'ArrowLeft') this.rotationSpeed.ay = 0\r\n      if (e.code === 'ArrowUp') this.rotationSpeed.az = 0\r\n      if (e.code === 'ArrowDown') this.rotationSpeed.az = 0\r\n    }\r\n\r\n    const keyDownListener = (e: KeyboardEvent) => {\r\n      if (!this.keys.w) this.keys.w = e.code === 'KeyW'\r\n      if (!this.keys.s) this.keys.s = e.code === 'KeyS'\r\n      if (!this.keys.a) this.keys.a = e.code === 'KeyA'\r\n      if (!this.keys.d) this.keys.d = e.code === 'KeyD'\r\n      if (!this.keys.shift) this.keys.shift = e.code === 'ShiftLeft'\r\n      if (!this.keys.space) this.keys.space = e.code === 'Space'\r\n      \r\n      if (e.code === 'ArrowRight') this.rotationSpeed.ay = this.angleSpeed\r\n      if (e.code === 'ArrowLeft') this.rotationSpeed.ay = -this.angleSpeed\r\n      if (e.code === 'ArrowUp') this.rotationSpeed.az = -this.angleSpeed\r\n      if (e.code === 'ArrowDown') this.rotationSpeed.az = this.angleSpeed\r\n    }\r\n\r\n    document.addEventListener('pointerlockchange', () => {\r\n      if (document.pointerLockElement === this.root) {\r\n        document.addEventListener('mousemove', mousemoveHandler)\r\n        document.addEventListener('keyup', keyUpListener)\r\n        document.addEventListener('keydown', keyDownListener)\r\n      } else {\r\n        document.removeEventListener('mousemove', mousemoveHandler)\r\n        document.removeEventListener('keyup', keyUpListener)\r\n        document.removeEventListener('keydown', keyDownListener)\r\n      }\r\n    })\r\n    //управление только когда курсор захвачен\r\n    this.root.addEventListener('click', () => {\r\n      this.root.requestPointerLock()\r\n    })\r\n  }\r\n}","import ObjectWorld from './ObjectWorld'\r\nimport RenderPipe from './RenderPipe'\r\nimport { createSVGElem, createSVGGElem } from '../utils/svgElements'\r\nimport { degToRad } from '../utils/angle'\r\nimport Camera from './Camera'\r\nimport Polygon from './Polygon'\r\nimport BackgroundElem from '../ObjectsWorld/BackgroundElem'\r\n\r\nexport default class World {\r\n  private renderPipe: RenderPipe\r\n  private objects: ObjectWorld[] = []\r\n  private polygons: Polygon[] = []\r\n  private bgElems: BackgroundElem[] = []\r\n  private svgRoot: SVGSVGElement\r\n  private groupObject: SVGGElement\r\n  private root: HTMLElement\r\n  private camera: Camera\r\n  private bg = { width: 0, url: '' }\r\n  private styleString = ''\r\n\r\n  private zFar = 1000000\r\n  private fov = 45\r\n\r\n  constructor(root: HTMLElement) {\r\n    this.svgRoot = createSVGElem()\r\n    this.groupObject = createSVGGElem()\r\n    this.svgRoot.append(this.groupObject)\r\n    root.append(this.svgRoot)\r\n    this.root = root\r\n    this.root.classList.add('wallpaper')\r\n\r\n    const z0 = this.calcZ0(this.fov, this.zFar)\r\n    this.camera = new Camera(root)\r\n\r\n    this.renderPipe = new RenderPipe(root.clientWidth, root.clientHeight, z0, this.zFar, this.camera)\r\n  }\r\n\r\n  get svgRootElement(): SVGSVGElement {\r\n    return this.svgRoot\r\n  }\r\n\r\n  public addBgElem(...elems: BackgroundElem[]) {\r\n    for (const elem of elems) {\r\n      this.styleString += elem.styleBg + ','\r\n    }\r\n    this.root.style.background = this.styleString.slice(0, -1)\r\n    this.bgElems.push(...elems)\r\n  }\r\n\r\n  private updateBg() {\r\n    this.styleString = ''\r\n    let bgSizes = ''\r\n\r\n    for (let i = 0; i < this.bgElems.length; i++) {\r\n      this.bgElems[i].update(this.root.clientWidth, this.camera.rotation.ay)\r\n      this.styleString += this.bgElems[i].styleBg\r\n      bgSizes += '100px'\r\n      if (i < this.bgElems.length - 1) {\r\n        this.styleString += ', '\r\n        bgSizes += ', '\r\n      }\r\n    }\r\n  \r\n    if (this.bgElems.length !== 0) {\r\n      bgSizes += ', '\r\n      this.styleString += ', ' \r\n    }\r\n      \r\n    const maxBgPos = this.bg.width + this.root.clientWidth\r\n    const a = this.camera.rotation.ay\r\n    const xPos = a * maxBgPos / 360\r\n\r\n    this.styleString += `url(\"${this.bg.url}\") ${-xPos}px 0 repeat-x` \r\n    bgSizes += 'cover'\r\n\r\n    this.root.style.background = this.styleString\r\n    this.root.style.backgroundSize = bgSizes\r\n  }\r\n\r\n  public setBackground(url: string): void {\r\n    const image = new Image()\r\n    image.src = url\r\n    this.bg.url = url\r\n    image.onload = () => {\r\n      this.bg.width = image.width\r\n    }\r\n  }\r\n\r\n  public addObjects(...objects: ObjectWorld[]) {\r\n    for (const obj of objects) {\r\n      for (const p of obj.polygons) {\r\n        if (p.texture)\r\n          this.svgRoot.prepend(p.texture)\r\n        this.groupObject.append(p.tagElem)\r\n        this.polygons.push(p)\r\n      }\r\n    }\r\n    \r\n    this.objects.push(...objects)\r\n  }\r\n  //animate\r\n  public run(fps: number) {\r\n    let fpsInterval: number \r\n    let now: number\r\n    let past: number\r\n  \r\n    const animate = () => {\r\n      requestAnimationFrame(animate)\r\n      now = Date.now()\r\n      const elapsed = now - past\r\n      if (elapsed > fpsInterval) {\r\n        past = now - (elapsed % fpsInterval)\r\n        this.render()\r\n      }\r\n    }\r\n  \r\n    const startAnimating = () => {\r\n      fpsInterval = 1000 / fps\r\n      past = Date.now()\r\n      animate()\r\n    }\r\n\r\n    startAnimating()\r\n  }  \r\n\r\n  private calcZ0(fov: number, zFar: number) {\r\n    fov = degToRad(fov)\r\n    const farWidth = 2 * zFar * Math.tan(fov / 2)\r\n    return zFar * this.root.clientWidth / farWidth\r\n  }\r\n\r\n  private render(): void {\r\n    this.camera.update()\r\n    this.updateBg()\r\n\r\n    for (const p of this.polygons) {\r\n      p.render(this.renderPipe)\r\n    }\r\n    //отсоритровать по averageDistance\r\n    this.polygons.sort((p1, p2) => p2.averageDistance - p1.averageDistance)\r\n    //изменяем  dom\r\n    let jStart = 0\r\n    let i = 0\r\n    while (this.polygons[i].tagElem.isEqualNode(this.groupObject.children[i])) {\r\n      i++\r\n      jStart = i\r\n\r\n      if (jStart >= this.polygons.length - 1) return\r\n    }\r\n\r\n    for (let j = jStart; j < this.polygons.length; j++) {\r\n      this.groupObject.insertBefore(this.polygons[j].tagElem, this.groupObject.children[j])\r\n    }\r\n  }\r\n}","export default class BackgroundElem {\r\n  public width = 0\r\n  public x: number \r\n  private xStart: number\r\n  public y: number\r\n  public src: string\r\n\r\n  constructor(urlImage: string, xStart: number, y: number) {\r\n    const image = new Image()\r\n    image.src = urlImage\r\n    this.src = urlImage\r\n    this.x = xStart\r\n    this.xStart = xStart\r\n    this.y = y\r\n\r\n    image.onload = () => {\r\n      this.width = image.width\r\n    }\r\n  }\r\n\r\n  public update(rootWidth: number, ay: number) {\r\n    const maxBgPos = this.width + rootWidth\r\n    this.x = this.xStart + ay * maxBgPos / 360 * 3\r\n  }\r\n\r\n  get styleBg() {\r\n    return `url(\"${this.src}\") ${-this.x}px ${this.y}px no-repeat`\r\n  }\r\n}","import Polygon from './Polygon'\r\nimport TransformMatrix from './TranformMatrix'\r\n\r\nexport default abstract class ObjectWorld {\r\n  polygons: Polygon[]\r\n\r\n  public translate(x: number, y: number, z: number) {\r\n    for (const polygon of this.polygons) {\r\n      polygon.points = polygon.points.map(point => TransformMatrix.translate(point, x, y ,z))\r\n    }\r\n  }\r\n\r\n  public rotate(ax: number, ay: number, az: number) {\r\n    for (const polygon of this.polygons) {\r\n      polygon.points = polygon.points.map(point => {\r\n        point = TransformMatrix.rotateX(point, ax)\r\n        point = TransformMatrix.rotateX(point, ay)\r\n        point = TransformMatrix.rotateX(point, az)\r\n        return point\r\n      })\r\n    }\r\n  }\r\n}","import { createPolygonElem, createSVGElem, createTextureElement } from '../utils/svgElements'\r\nimport Point from './Point'\r\nimport RenderPipe from './RenderPipe'\r\n\r\nexport default class Polygon {\r\n  public static count = 0\r\n\r\n  private root: SVGSVGElement\r\n  private elem: SVGPolygonElement\r\n  private textrueElem: SVGDefsElement\r\n  private number: number\r\n\r\n  public points: Point[]\r\n  public averageDistance: number\r\n\r\n  constructor(points: Point[] = [], color = 'black') {\r\n    this.root = createSVGElem()\r\n    this.elem = createPolygonElem()\r\n    this.elem.setAttribute('fill', color)\r\n\r\n    this.points = points\r\n\r\n    Polygon.count++\r\n    this.number = Polygon.count\r\n  }\r\n\r\n  set fillColor(color: string) {\r\n    this.elem.setAttribute('fill', color)\r\n  }\r\n\r\n  get tagElem(): SVGPolygonElement {\r\n    return this.elem\r\n  }\r\n\r\n  get texture(): SVGDefsElement {\r\n    return this.textrueElem\r\n  }\r\n\r\n  public setTexture(url: string) {\r\n    this.elem.id = 'defs-' + this.number\r\n    this.textrueElem = createTextureElement(url, this.elem.id)\r\n    this.elem.setAttribute('fill', `url(#${this.elem.id})`)\r\n  }\r\n\r\n  public render(renderPipe: RenderPipe): void {\r\n    this.elem.points.clear()\r\n    const { points: projectPoints, averageDistance }= renderPipe.convertPoints(this.points)\r\n    this.averageDistance = averageDistance\r\n\r\n    for (const point of projectPoints) {\r\n      const svgPoint: SVGPoint = this.root.createSVGPoint()\r\n      svgPoint.x = point.x \r\n      svgPoint.y = point.y\r\n          \r\n      this.elem.points.appendItem(svgPoint)\r\n    }\r\n  }\r\n}","import ObjectWorld from '../core/ObjectWorld'\r\nimport Point from '../core/Point'\r\nimport Polygon from '../core/Polygon'\r\n\r\nexport default class Cube extends ObjectWorld {\r\n  constructor(size: number, center: Point, color = 'black', texture?: string) {\r\n    super()\r\n    this.polygons = [\r\n      //задняя плоскость\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: size / 2, z: -size / 2 },\r\n        { x: -size / 2, y: size / 2, z: -size / 2 }\r\n      ], color),\r\n      //передняя плоскость\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: size / 2 },\r\n        { x: size / 2, y: -size / 2, z: size / 2 },\r\n        { x: size / 2, y: size / 2, z: size / 2 },\r\n        { x: -size / 2, y: size / 2, z: size / 2 }\r\n      ], color),\r\n      //верхняя\r\n      new Polygon([\r\n        { x: -size / 2, y: size / 2, z: -size / 2 },\r\n        { x: size / 2, y: size / 2, z: -size / 2 },\r\n        { x: size / 2, y: size / 2, z: size / 2 },\r\n        { x: -size / 2, y: size / 2, z: size / 2 }\r\n      ], color),\r\n      //нижняя\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: size / 2 },\r\n        { x: -size / 2, y: -size / 2, z: size / 2 }\r\n      ], color),\r\n      // правая\r\n      new Polygon([\r\n        { x: size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: size / 2 },\r\n        { x: size / 2, y: size / 2, z: size / 2 },\r\n        { x: size / 2, y: size / 2, z: -size / 2 }\r\n      ], color),\r\n      //левая\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: -size / 2, y: -size / 2, z: size / 2 },\r\n        { x: -size / 2, y: size / 2, z: size / 2 },\r\n        { x: -size / 2, y: size / 2, z: -size / 2 }\r\n      ], color)\r\n    ]\r\n\r\n    for (const p of this.polygons) p.setTexture(texture)\r\n\r\n    this.translate(-center.x, -center.y, -center.z)\r\n  }\r\n}","import ObjectWorld from '../core/ObjectWorld'\r\nimport Point from '../core/Point'\r\nimport Polygon from '../core/Polygon'\r\n\r\nexport default class Pyramid extends ObjectWorld {\r\n  constructor(size: number, center: Point, color = 'black') {\r\n    super()\r\n    this.polygons = [\r\n      //нижняя\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: size / 2 },\r\n        { x: -size / 2, y: -size / 2, z: size / 2 }\r\n      ], color),\r\n      // правая\r\n      new Polygon([\r\n        { x: size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: size / 2 },\r\n        { x: 0, y: size / 2, z: 0 },\r\n      ], color),\r\n      //левая\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: -size / 2, y: -size / 2, z: size / 2 },\r\n        { x: 0, y: size / 2, z: 0 },\r\n      ], color),\r\n      //передняя\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: size / 2 },\r\n        { x: size / 2, y: -size / 2, z: size / 2 },\r\n        { x: 0, y: size / 2, z: 0 },\r\n      ], color),\r\n      //задняя\r\n      new Polygon([\r\n        { x: -size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: size / 2, y: -size / 2, z: -size / 2 },\r\n        { x: 0, y: size / 2, z: 0 },\r\n      ], color),\r\n    ]\r\n\r\n    this.translate(center.x, center.y, center.z)\r\n  }\r\n}","import '../css/3dengine.css'\r\nimport World from './core/World'\r\nimport BackgroundElem from './ObjectsWorld/BackgroundElem'\r\nimport Cube from './ObjectsWorld/Cube'\r\nimport Pyramid from './ObjectsWorld/Pyramid'\r\n\r\nconst world = new World(document.getElementById('world'))\r\nworld.addObjects(new Cube(10, {x:1,y:0,z:0}, 'black', '../textures/brick.png'))\r\nworld.addObjects(new Pyramid(300, {x:1,y:-100,z:500}))\r\nworld.addObjects(new Pyramid(100, {x:500,y:100,z:100}, 'red'))\r\nworld.addObjects(new Pyramid(100, {x:100,y:100,z:600}, 'red'))\r\nworld.addObjects(new Pyramid(50, {x:900,y:1000,z:300}, 'yellow'))\r\nworld.addObjects(new Pyramid(200, {x:100,y:100,z:100}, 'yellow'))\r\nworld.addBgElem(new BackgroundElem('../textures/seraphim.png', 200, 100))\r\nworld.addBgElem(new BackgroundElem('../textures/seraphim.png', 400, 100))\r\nworld.addBgElem(new BackgroundElem('../textures/seraphim.png', 600, 300))\r\nworld.setBackground('../textures/sky.png')\r\n\r\nworld.run(60)\r\n\r\n\r\ndocument.querySelector('#save').addEventListener('click', () => {\r\n  const svgRoot = world.svgRootElement\r\n  const serializer = new XMLSerializer()\r\n\r\n  let source = serializer.serializeToString(svgRoot)\r\n  source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source\r\n  \r\n  const url = 'data:image/svg+xml;charset=utf-8,'+encodeURIComponent(source);\r\n  const a = document.createElement('a')\r\n  const e = new MouseEvent('click')\r\n\r\n  a.download = 'download.svg';\r\n  a.href = url\r\n  a.dispatchEvent(e)\r\n})"],"names":[],"sourceRoot":""}